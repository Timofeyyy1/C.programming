#include <stdio.h>
#include <stdlib.h>

// Функция для создания матрицы
double** CreateMatrix(int n) 
{
    double** matrix = (double**)malloc(n * sizeof(double*));
    for (int i = 0; i < n; i++)
    {
        matrix[i] = (double*)malloc(n * sizeof(double));
    }
    return matrix;
}

// Функция для выполнения операций с матрицами
double** MatrixOper(double** matrix1, double** matrix2, int n, char operation) 
{
    double** result = CreateMatrix(n);

    // Выполнение операции в зависимости от заданного оператора
    for (int i = 0; i < n; i++) 
    {
        for (int j = 0; j < n; j++) 
        {
            if (operation == '+') 
            {
                result[i][j] = matrix1[i][j] + matrix2[i][j];
            }
            else if (operation == '-') 
            {
                result[i][j] = matrix1[i][j] - matrix2[i][j];
            }
            else if (operation == '*') 
            {
                result[i][j] = 0;
                for (int k = 0; k < n; k++) 
                {
                    result[i][j] += matrix1[i][k] * matrix2[k][j];
                }
            }
        }
    }

    return result;
}

// Функция для вывода матрицы
void PrintMatrix(int n, double** matrix) 
{
    for (int i = 0; i < n; i++) 
    {
        for (int j = 0; j < n; j++) 
        {
            printf("%.2f ", matrix[i][j]);
        }
        printf("\n");
    }
}

int main() {
    int n;
    printf("Введите размерность матрицы: ");
    scanf("%d", &n);

    double** matrix1 = CreateMatrix(n);
    double** matrix2 = CreateMatrix(n);

    // Ввод элементов для первой матрицы
    printf("Введите элементы первой матрицы: \n");
    for (int i = 0; i < n; i++) 
    {
        for (int j = 0; j < n; j++) 
        {
            scanf("%lf", &matrix1[i][j]);
        }
    }

    // Ввод элементов для второй матрицы
    printf("Введите элементы второй матрицы: \n");
    for (int i = 0; i < n; i++) 
    {
        for (int j = 0; j < n; j++) 
        {
            scanf("%lf", &matrix2[i][j]);
        }
    }

    // Выбор операции для выполнения
    char operation;
    printf("Введите операцию для выполнения (+ - *): ");
    scanf(" %c", &operation);

    // Выполнение операции над матрицами
    double** result = MatrixOper(matrix1, matrix2, n, operation);

    // Вывод результата операции
    printf("Результат операции:\n");
    PrintMatrix(n, result);

    // Освобождение выделенной памяти для матриц
    for (int i = 0; i < n; i++) 
    {
        free(matrix1[i]);
        free(matrix2[i]);
        free(result[i]);
    }
    free(matrix1);
    free(matrix2);
    free(result);

    return 0;
}
