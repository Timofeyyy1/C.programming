#include <stdio.h>
#include <stdlib.h>
#include <time.h>

void generate_matrix(FILE *file, int size) {
    for (int i = 0; i < size; i++) {
        for (int j = 0; j < size; j++) {
            fprintf(file, "%d ", rand() % 10);
        }
        fprintf(file, "\n");
    }
    fprintf(file, "\n");
}

void read_matrix(FILE *file, int size, int matrix[size][size]) {
    for (int i = 0; i < size; i++) {
        for (int j = 0; j < size; j++) {
            fscanf(file, "%d", &matrix[i][j]);
        }
    }
}

void multiply_matrices(int size, int matrix1[size][size], int matrix2[size][size], int result[size][size]) {
    for (int i = 0; i < size; i++) {
        for (int j = 0; j < size; j++) {
            result[i][j] = 0;
            for (int k = 0; k < size; k++) {
                result[i][j] += matrix1[i][k] * matrix2[k][j];
            }
        }
    }
}

void add_matrices(int size, int matrix1[size][size], int matrix2[size][size], int result[size][size]) {
    for (int i = 0; i < size; i++) {
        for (int j = 0; j < size; j++) {
            result[i][j] = matrix1[i][j] + matrix2[i][j];
        }
    }
}

int main() {
    srand(time(NULL));
    clock_t start = clock();

    int size;
    printf("Введите размер матриц: ");
    scanf("%d", &size);

    FILE *input = fopen("input.txt", "w");
    generate_matrix(input, size);
    generate_matrix(input, size);
    fclose(input);

    int matrix1[size][size], matrix2[size][size], result[size][size];

    input = fopen("input.txt", "r");
    read_matrix(input, size, matrix1);
    read_matrix(input, size, matrix2);
    fclose(input);

    multiply_matrices(size, matrix1, matrix2, result);

    FILE *output = fopen("output.txt", "w");
    for (int i = 0; i < size; i++) {
        for (int j = 0; j < size; j++) {
            fprintf(output, "%d ", result[i][j]);
        }
        fprintf(output, "\n");
    }
    fclose(output);

    add_matrices(size, matrix1, matrix2, result);

    output = fopen("output.txt", "a");
    fprintf(output, "\n");
    for (int i = 0; i < size; i++) {
        for (int j = 0; j < size; j++) {
            fprintf(output, "%d ", result[i][j]);
        }
        fprintf(output, "\n");
    }
    fclose(output);

    clock_t end = clock();
    double time_spent = (double)(end - start) / CLOCKS_PER_SEC;
    printf("Время работы программы: %.5f секунд\n", time_spent);

    return 0;
}
