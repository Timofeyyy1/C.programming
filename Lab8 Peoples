/*
1)Создать текстовый файл с записями, включающие имя/фамилию человека, год рождения, пол и рост (в метрах).(выполнено)
2)Упорядочить элементы по году рождения, име-ни/фамилии, полу или росту. 
3)Вывести результат.
4)Указать элемент, по которому следует упорядочить, через консоль. (выполнено)
5)А также реализовать возможность задавать несколько полей для упорядочивания.  
*/

#include <stdio.h>
#include <stdlib.h>

struct person 
{
    char Name[50];
    char Lastname[50];
    int BirthYear;
    char Gender;
    float Height;
};

int cmpName(const void *a, const void *b)
{
    struct person* personA = (struct person*)a;
    struct person* personB = (struct person*)b;
    return personA -> Name - personB -> Name;
}

int cmpLastname(const void *a, const void *b)
{
    struct person* personA = (struct person*)a;
    struct person* personB = (struct person*)b;
    return personA -> Lastname - personB -> Lastname;
}

int cmpBirthYear(const void *a, const void *b)
{
    struct person* personA = (struct person*)a;
    struct person* personB = (struct person*)b;
    return personA->BirthYear - personB -> BirthYear;
}

int cmpGender(const void *a, const void *b)
{
    struct person* personA = (struct person*)a;
    struct person* personB = (struct person*)b;
    return personA -> Gender - personB -> Gender;
}

int cmpHeight(const void *a, const void *b)
{
    struct person* personA = (struct person*)a;
    struct person* personB = (struct person*)b;
    return personA -> Height - personB -> Height;
}


int main()
{
    int data;
    
    printf("Введите размерность строк: ");
    scanf("%d", &data);

    struct person* people = (struct person*)malloc(data*sizeof(struct person));
    
     for(int i = 0; i < data; i++)
    {
        printf("Введите имя: ");
        scanf("%s", people[i].Name);
        printf("Введите фамилию: ");
        scanf("%s", people[i].Lastname);
        printf("Введите год рождения: ");
        scanf("%d", &people[i].BirthYear);
        printf("Введите пол(М или Ж): ");
        scanf(" %c", &people[i].Gender);
        printf("Введите рост(в метрах): ");
        scanf("%f", &people[i].Height);
    }
    
    int sort;
    printf ("Сортировка по(Имя - 1, Фамилия - 2, Год - 3, Пол - 4, Рост - 5): ");
    scanf("%d", &sort);        
    
    
    if(sort == 1)
    {
        qsort(people, data, sizeof(struct person), cmpName); 
    }
    
    else if(sort == 2)
    {
        qsort(people, data, sizeof(struct person), cmpLastname); 
    }
    
    else if(sort == 3)
    {
        qsort(people, data, sizeof(struct person), cmpBirthYear); 
    }
    
    else if(sort == 4)
    {
        qsort(people, data, sizeof(struct person), cmpGender); 
    }
    
    else if(sort == 5)
    {
        qsort(people, data, sizeof(struct person), cmpHeight); 
    }
    
    printf("Вывод результата: \n");
    for(int i = 0; i < data; i++)
    {
        printf("%s, %s, %d, %c, %.2f\n", people[i].Name, people[i].Lastname, people[i].BirthYear, people[i].Gender,people[i].Height);
    }
    
    free(people);
    
            
            
    return 0;
}
