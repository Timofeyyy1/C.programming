#include <stdio.h>
#include <stdlib.h>

// Создаем функцию для вычисления операции над матрицами
double* MatrixOper(double* matrix1, double* matrix2, int n, char operation){
    double* result = malloc(n * n * sizeof(double));

    // Вычисляем операцию в зависимости от знака 
    for(int i = 0; i < n; i++)
    {
        for(int j = 0; j < n; j++)
        {
            int index = i * n + j;
            if (operation == '+')
            {
                result[index] = matrix1[index] + matrix2[index];
            }
            else if (operation == '-')
            {
                result[index] = matrix1[index] - matrix2[index];
            }
            else if (operation == '*')
            {
                result[index] = 0;
                for(int k = 0; k < n; k++)
                {
                    result[index] += matrix1[i * n + k] * matrix2[k * n + j];
                } 
            }
        }
    }
   
   return result;
}

// Функция для вывода матрицы на экран
void PrintMatrix(int n, double* matrix)
{
    for(int i = 0; i < n; i++)
    {  
        for(int j = 0; j < n; j++)
        {
            printf("%.2f ", matrix[i * n + j]);
        }
        printf("\n");
    }    
}

int main()
{
    // Вводим размерность для матрицы
    int n;
    printf("Введите размерность матрицы: ");
    scanf("%d", &n);

    // Записываем переменные в динамической памяти
    double* matrix1 = malloc(n * n * sizeof(double));
    double* matrix2 = malloc(n * n * sizeof(double));

    // Цикл для считывания элементов первой матрицы и вывод их на экран
    printf("Введите элементы первой матрицы: \n");
    for(int i = 0; i < n; i++)
    {   
        for(int j = 0; j < n; j++)
        {
            scanf("%lf", &matrix1[i * n + j]); 
        }
    }
    // Цикл для считывания элементов второй матрицы и вывод их на экран
    printf("Введите элементы второй матрицы: \n");
    for(int i = 0; i < n; i++)
    {   
        for(int j = 0; j < n; j++)
        {
            scanf("%lf", &matrix2[i * n + j]); 
        }
    }

    // Выбор операции, затем ее вычисления
    char operation;
    printf("Введите какую операцию выполнить (+ - *): ");
    scanf(" %c", &operation);

    // Вычисление результата операции
    double* result = MatrixOper(matrix1, matrix2, n, operation);

    // Вывод результата операции
    printf("Результат операции:\n");
    PrintMatrix(n, result);
    
    // Очищение памяти
    free(matrix1);
    free(matrix2);
    free(result);
    
    return 0;
}
