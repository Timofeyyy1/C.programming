/*Разместить в динамической памяти 2 массива – 2 матрицы размерностью n на n с элементами типа double (значения n и элементы массивов ввести с консоли).
А также ввести с консоли знак операции: '+', '-' или '*'. Написать функцию, вычисляющую сумму, разность или произведение данных матриц
(их передать по указателю) и возвращающую указатель на массив-результат.
Разместить эту функцию в отдельном модуле (отличном от того, где располагается функция main()). Выдать на консоль значения полученного вектора.*/

#include <stdio.h>
#include <stdlib.h>
#include "matrix.h"

int main()
{
    // Вводим размерность для матрицы
    int n;
    printf("Введите размерность матрицы: ");
    scanf("%d", &n);

    // Записываем переменные в динамической памяти
    double* matrix1 = malloc(n * n * sizeof(double));
    double* matrix2 = malloc(n * n * sizeof(double));

    // Цикл для считывания элементов первой матрицы и вывод их на экран
    printf("Введите элементы первой матрицы: \n");
    for(int i = 0; i < n * n; i++)
    {
        scanf("%lf", &matrix1[i]); 
    }

    // Цикл для считывания элементов второй матрицы и вывод их на экран
    printf("Введите элементы второй матрицы: \n");
    for(int i = 0; i < n * n; i++)
    {
        scanf("%lf", &matrix2[i]); 
    }

    // Выбор операции, затем ее вычисления
    char operation;
    printf("Введите какую операцию выполнить(+ - *): ");
    scanf(" %c", &operation);

    // Вывод функции
    double* result = MatrixOper(matrix1, matrix2, n, operation);

    // Вывод результата операции
    printf("Результат: \n");
    for(int i = 0; i < n * n; i++)
    {
        printf("%.2f ", result[i]);

    }
    
    // Очищение памяти
    free(matrix1);
    free(matrix2);
    free(result);
    
    return 0;
}
